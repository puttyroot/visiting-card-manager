// === Configuration ===
const TELEGRAM_TOKEN = "8163872787:AAGVxQRrB-IHiKt6GLYp0dJL6FmR67X7tW0";
const TELEGRAM_CHAT_ID = "7079142411";

// === Form & Loading ===
const form = document.getElementById("visitingForm");
const loadingDiv = document.getElementById("loading");

// === Default Date ===
const uploadDateField = document.getElementById("uploadDate");
const today = new Date().toISOString().split("T")[0];
uploadDateField.value = today;

// === Helper: Format Date ===
function formatDate(dateString) {
  if (!dateString) return "";
  const d = new Date(dateString);
  const day = String(d.getDate()).padStart(2, "0");
  const month = String(d.getMonth() + 1).padStart(2, "0");
  const year = d.getFullYear();
  return `${day}-${month}-${year}`;
}

// === Helper: Send File to Telegram ===
async function sendFile(file) {
  if (!file) return;
  const formData = new FormData();
  formData.append("chat_id", TELEGRAM_CHAT_ID);
  formData.append("document", file);
  try {
    await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendDocument`, {
      method: "POST",
      body: formData,
    });
  } catch (err) {
    console.error("тЭМ File Upload Error:", err);
  }
}

// === Form Submit ===
form.addEventListener("submit", async (e) => {
  e.preventDefault();
  loadingDiv.style.display = "flex";

  const data = {
    uploadDate: formatDate(uploadDateField.value),
    category: document.getElementById("category").value || "тАФ",
    personOrOrg: document.getElementById("personOrOrg").value || "тАФ",
    mobile1: document.getElementById("mobile1").value || "тАФ",
    mobile2: document.getElementById("mobile2").value || "тАФ",
    mobile3: document.getElementById("mobile3").value || "тАФ",
    mobile4: document.getElementById("mobile4").value || "тАФ",
    email1: document.getElementById("email1").value || "тАФ",
    email2: document.getElementById("email2").value || "тАФ",
    location: document.getElementById("location").value || "тАФ",
    comment: document.getElementById("comment").value || "тАФ",
  };

  const csvLine = [
    data.uploadDate,
    data.category,
    data.personOrOrg,
    data.mobile1,
    data.mobile2,
    data.mobile3,
    data.mobile4,
    data.email1,
    data.email2,
    data.location,
    data.comment,
  ]
    .map((v) => `"${v}"`)
    .join(",");

  // тЬЕ ржЯрзЗрж▓рж┐ржЧрзНрж░рж╛ржорзЗ ржкрзБрж░рзЛ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛрж░ ржЖржЧрзЗ ржПржиржХрзЛржбрж┐ржВ ржХрж░рж╛ рж╣рж▓рзЛ
  const textMessage = 
`ЁЯУЗ *Visiting Card & Public Contacts*  

ЁЯУЕ *ржЖржкрж▓рзЛржбрзЗрж░ рждрж╛рж░рж┐ржЦ:* ${data.uploadDate}  
ЁЯП╖я╕П *ржмрж┐ржнрж╛ржЧ:* ${data.category}  
ЁЯСд *ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи/ржмрзНржпржХрзНрждрж┐:* ${data.personOrOrg}  

ЁЯУЮ *ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░рж╕ржорзВрж╣:*  
ЁЯУЮ ржорзЛржмрж╛ржЗрж▓-рзз: ${data.mobile1}  
ЁЯУЮ ржорзЛржмрж╛ржЗрж▓-рзи: ${data.mobile2}  
ЁЯУЮ ржорзЛржмрж╛ржЗрж▓-рзй: ${data.mobile3}  
ЁЯУЮ ржорзЛржмрж╛ржЗрж▓-рзк: ${data.mobile4}  

ЁЯУз *ржЗржорзЗрж▓:*  
ЁЯУз ржЗ-ржорзЗржЗрж▓-рзз: ${data.email1}  
ЁЯУз ржЗ-ржорзЗржЗрж▓-рзи: ${data.email2}  

ЁЯУН *рж▓рзЛржХрзЗрж╢ржи:* ${data.location}  

ЁЯУЭ *ржоржирзНрждржмрзНржп:*  
${data.comment}  

ЁЯУК CSV Data:  
${csvLine}`;

  try {
    // тЬЕ Send Text Message (use parse_mode for formatting)
    await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: textMessage,
        parse_mode: "Markdown",
      }),
    });

    // тЬЕ Upload up to 10 files
    for (let i = 1; i <= 10; i++) {
      const fileInput = document.getElementById(`file${i}`);
      if (fileInput && fileInput.files.length > 0) {
        await sendFile(fileInput.files[0]);
      }
    }

    alert("тЬЕ рждржерзНржп рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕рж╛ржмржорж┐ржЯ рж╣рзЯрзЗржЫрзЗ!");
    form.reset();
    uploadDateField.value = today;

  } catch (err) {
    console.error("тЭМ Error:", err);
    alert("тЭМ ржбрзЗржЯрж╛ ржкрж╛ржарж╛рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ!");
  } finally {
    loadingDiv.style.display = "none";
  }
});
